{"ast":null,"code":"var _jsxFileName = \"/Users/wangjiamin/Documents/GitHub/makeup-starters/src/SkinTemptColor.js\";\n//import '../SkinTemptColor.html'\nimport './index.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SkinTemptColor(props) {\n  var _s = $RefreshSig$();\n  let preview = document.getElementById(\"preview\");\n  let recordingTimeMS = 5000;\n  let recording = document.getElementById(\"recording\");\n  function handleClick(event) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        preview.srcObject = stream;\n        preview.captureStream = preview.captureStream || preview.mozCaptureStream;\n        return new Promise(resolve => preview.onplaying = resolve);\n      }).then(() => startRecording(preview.captureStream(), recordingTimeMS)).then(recordedChunks => {\n        let recordedBlob = new Blob(recordedChunks, {\n          type: \"video/webm\"\n        });\n        recording.src = URL.createObjectURL(recordedBlob);\n        console.log(`Successfully recorded ${recordedBlob.size} bytes of ${recordedBlob.type} media.`);\n      }).catch(error => {\n        if (error.name === \"NotFoundError\") {\n          console.log(\"Camera or microphone not found. Can't record.\");\n        } else {\n          console.log('error');\n        }\n      });\n      function wait(delayInMS) {\n        return new Promise(resolve => setTimeout(resolve, delayInMS));\n      }\n      function startRecording(stream, lengthInMS) {\n        let recorder = new MediaRecorder(stream);\n        let data = [];\n        recorder.ondataavailable = event => data.push(event.data);\n        recorder.start();\n        console.log(`${recorder.state} for ${lengthInMS / 1000} seconds…`);\n        let stopped = new Promise((resolve, reject) => {\n          recorder.onstop = resolve;\n          recorder.onerror = event => reject(event.name);\n        });\n        let recorded = wait(lengthInMS).then(() => {\n          if (recorder.state === \"recording\") {\n            recorder.stop();\n          }\n        });\n        return Promise.all([stopped, recorded]).then(() => data);\n      }\n    }\n  }\n  function handleStart(event) {\n    _s();\n    const videoRef = useRef(null);\n    useEffect(() => {\n      const getUserMedia = async () => {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          videoRef.current.srcObject = stream;\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      getUserMedia();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }, this);\n  }\n  _s(handleStart, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n  function handleStop(event) {\n    //let stopButton = document.getElementById(\"stopButton\");\n    stop(preview.srcObject);\n    function stop(stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this function will help you to know your skin Tempterature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"camera required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        children: \" start testing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"preview\",\n      width: \"160\",\n      height: \"120\",\n      autopplay: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"stopButton\",\n        className: \"button\",\n        onClick: handleStop,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_c = SkinTemptColor;\nvar _c;\n$RefreshReg$(_c, \"SkinTemptColor\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SkinTemptColor","props","_s","$RefreshSig$","preview","document","getElementById","recordingTimeMS","recording","handleClick","event","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","captureStream","mozCaptureStream","Promise","resolve","onplaying","startRecording","recordedChunks","recordedBlob","Blob","type","src","URL","createObjectURL","console","log","size","catch","error","name","wait","delayInMS","setTimeout","lengthInMS","recorder","MediaRecorder","data","ondataavailable","push","start","state","stopped","reject","onstop","onerror","recorded","stop","all","handleStart","videoRef","useRef","useEffect","current","err","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","handleStop","getTracks","forEach","track","className","onClick","id","width","height","autopplay","_c","$RefreshReg$"],"sources":["/Users/wangjiamin/Documents/GitHub/makeup-starters/src/SkinTemptColor.js"],"sourcesContent":["//import '../SkinTemptColor.html'\nimport './index.css';\nimport React from 'react';\n\nexport function SkinTemptColor(props){\n    let preview = document.getElementById(\"preview\");\n    let recordingTimeMS = 5000;\n    let recording = document.getElementById(\"recording\");\n    \n    function handleClick(event){\n        \n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({\n                video: true\n            })\n            \n            .then((stream) => {\n                preview.srcObject = stream;\n                \n                preview.captureStream =\n                preview.captureStream || preview.mozCaptureStream;\n                return new Promise((resolve) => (preview.onplaying = resolve));\n            })\n            .then(() => startRecording(preview.captureStream(), recordingTimeMS))\n            .then((recordedChunks) => {\n                let recordedBlob = new Blob(recordedChunks, { type: \"video/webm\" });\n                recording.src = URL.createObjectURL(recordedBlob);\n\n            console.log(\n                `Successfully recorded ${recordedBlob.size} bytes of ${recordedBlob.type} media.`\n             );\n            })\n            .catch((error) => {\n                if (error.name === \"NotFoundError\") {\n                    console.log(\"Camera or microphone not found. Can't record.\");\n                } else {\n                    console.log('error');\n            }\n            });\n           \n           \n            function wait(delayInMS) {\n                return new Promise((resolve) => setTimeout(resolve, delayInMS));\n              }\n\n              \n             \n              \n              function startRecording(stream, lengthInMS) {\n                let recorder = new MediaRecorder(stream);\n                let data = [];\n              \n                recorder.ondataavailable = (event) => data.push(event.data);\n                recorder.start();\n                console.log(`${recorder.state} for ${lengthInMS / 1000} seconds…`);\n              \n                let stopped = new Promise((resolve, reject) => {\n                  recorder.onstop = resolve;\n                  recorder.onerror = (event) => reject(event.name);\n                });\n              \n                let recorded = wait(lengthInMS).then(() => {\n                  if (recorder.state === \"recording\") {\n                    recorder.stop();\n                  }\n                });\n              \n                return Promise.all([stopped, recorded]).then(() => data);\n              }\n        }\n        \n    }\n\n    function handleStart(event){\n        const videoRef = useRef(null);\n\n        useEffect(() => {\n            const getUserMedia = async () => {\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({video: true});\n                    videoRef.current.srcObject = stream;\n                } catch (err) {\n                    console.log(err);\n                }\n            };\n            getUserMedia();\n        }, []);\n\n    return (\n         <div>\n        <video \n        ref={videoRef}\n        autoPlay\n      />\n    </div>\n  );\n    }\n\n    function handleStop(event){\n        //let stopButton = document.getElementById(\"stopButton\");\n        stop(preview.srcObject);\n        function stop(stream) {\n            stream.getTracks().forEach((track) => track.stop());\n        }\n    }\n    return (\n        <div className=\"main-body\">\n                \n                <p>this function will help you to know your skin Tempterature</p>\n                <p>camera required</p>\n                <div className=\"start\">\n                <button onClick={handleStart}> start testing</button>\n                </div>\n                <video id=\"preview\" width=\"160\" height=\"120\" autopplay=\"false\"></video>\n                <div className=\"stop\">\n                    <button id=\"stopButton\" className=\"button\"onClick={handleStop}>Stop Recording</button>\n                 </div>\n        </div>\n        \n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}