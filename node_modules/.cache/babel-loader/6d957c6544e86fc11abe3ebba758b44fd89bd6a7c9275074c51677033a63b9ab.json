{"ast":null,"code":"var _jsxFileName = \"/Users/wangjiamin/Documents/GitHub/makeup-starters/src/SkinTemptColor.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//import '../SkinTemptColor.html'\nexport function SkinTemptColor(props) {\n  function handleClick(event) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      })\n      // .then((stream) => {\n\n      //     //  const camera = document.getElementById(\"camera\");\n      //     //  camera.srcObject = stream;\n      //     //  camera.requestPictureInPicture();\n      //     // // camera.addEventListener(\"click\", () => {\n      //     // //     camera.requestPictureInPicture();\n      //     // // });\n\n      // });\n      .then(startRecording(stream, 3000));\n      function startRecording(stream, lengthInMS) {\n        let recorder = new MediaRecorder(stream);\n        let data = [];\n        recorder.ondataavailable = event => data.push(event.data);\n        recorder.start();\n        log(`${recorder.state} for ${lengthInMS / 1000} seconds…`);\n        let stopped = new Promise((resolve, reject) => {\n          recorder.onstop = resolve;\n          recorder.onerror = event => reject(event.name);\n        });\n        let recorded = wait(lengthInMS).then(() => {\n          if (recorder.state === \"recording\") {\n            recorder.stop();\n          }\n        });\n        return Promise.all([stopped, recorded]).then(() => data);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this function will help you to know your skin Tempterature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \" start testing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this function will help you to know your skin Tempterature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"camera required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_c = SkinTemptColor;\nvar _c;\n$RefreshReg$(_c, \"SkinTemptColor\");","map":{"version":3,"names":["SkinTemptColor","props","handleClick","event","navigator","mediaDevices","getUserMedia","video","then","startRecording","stream","lengthInMS","recorder","MediaRecorder","data","ondataavailable","push","start","log","state","stopped","Promise","resolve","reject","onstop","onerror","name","recorded","wait","stop","all","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/wangjiamin/Documents/GitHub/makeup-starters/src/SkinTemptColor.js"],"sourcesContent":["//import '../SkinTemptColor.html'\nexport function SkinTemptColor(props){\n    \n    function handleClick(event){\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({\n                video: true\n            })\n            // .then((stream) => {\n                \n            //     //  const camera = document.getElementById(\"camera\");\n            //     //  camera.srcObject = stream;\n            //     //  camera.requestPictureInPicture();\n            //     // // camera.addEventListener(\"click\", () => {\n            //     // //     camera.requestPictureInPicture();\n            //     // // });\n\n            // });\n            .then(startRecording(stream,3000));\n           \n\n              function startRecording(stream, lengthInMS) {\n                let recorder = new MediaRecorder(stream);\n                let data = [];\n              \n                recorder.ondataavailable = (event) => data.push(event.data);\n                recorder.start();\n                log(`${recorder.state} for ${lengthInMS / 1000} seconds…`);\n              \n                let stopped = new Promise((resolve, reject) => {\n                  recorder.onstop = resolve;\n                  recorder.onerror = (event) => reject(event.name);\n                });\n              \n                let recorded = wait(lengthInMS).then(() => {\n                  if (recorder.state === \"recording\") {\n                    recorder.stop();\n                  }\n                });\n              \n                return Promise.all([stopped, recorded]).then(() => data);\n              }\n              \n              \n        }\n          \n        return(\n            <p>this function will help you to know your skin Tempterature</p>\n            \n        );\n        \n    }\n    return (\n        <div className=\"main-body\">\n                <button onClick={handleClick}> start testing</button>\n                <p>this function will help you to know your skin Tempterature</p>\n                <p>camera required</p>\n        </div>\n        \n    );\n}"],"mappings":";;AAAA;AACA,OAAO,SAASA,cAAcA,CAACC,KAAK,EAAC;EAEjC,SAASC,WAAWA,CAACC,KAAK,EAAC;IACvB,IAAIC,SAAS,CAACC,YAAY,IAAID,SAAS,CAACC,YAAY,CAACC,YAAY,EAAE;MAC/DF,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAChCC,KAAK,EAAE;MACX,CAAC;MACD;;MAEA;MACA;MACA;MACA;MACA;MACA;;MAEA;MAAA,CACCC,IAAI,CAACC,cAAc,CAACC,MAAM,EAAC,IAAI,CAAC,CAAC;MAGhC,SAASD,cAAcA,CAACC,MAAM,EAAEC,UAAU,EAAE;QAC1C,IAAIC,QAAQ,GAAG,IAAIC,aAAa,CAACH,MAAM,CAAC;QACxC,IAAII,IAAI,GAAG,EAAE;QAEbF,QAAQ,CAACG,eAAe,GAAIZ,KAAK,IAAKW,IAAI,CAACE,IAAI,CAACb,KAAK,CAACW,IAAI,CAAC;QAC3DF,QAAQ,CAACK,KAAK,EAAE;QAChBC,GAAG,CAAE,GAAEN,QAAQ,CAACO,KAAM,QAAOR,UAAU,GAAG,IAAK,WAAU,CAAC;QAE1D,IAAIS,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;UAC7CX,QAAQ,CAACY,MAAM,GAAGF,OAAO;UACzBV,QAAQ,CAACa,OAAO,GAAItB,KAAK,IAAKoB,MAAM,CAACpB,KAAK,CAACuB,IAAI,CAAC;QAClD,CAAC,CAAC;QAEF,IAAIC,QAAQ,GAAGC,IAAI,CAACjB,UAAU,CAAC,CAACH,IAAI,CAAC,MAAM;UACzC,IAAII,QAAQ,CAACO,KAAK,KAAK,WAAW,EAAE;YAClCP,QAAQ,CAACiB,IAAI,EAAE;UACjB;QACF,CAAC,CAAC;QAEF,OAAOR,OAAO,CAACS,GAAG,CAAC,CAACV,OAAO,EAAEO,QAAQ,CAAC,CAAC,CAACnB,IAAI,CAAC,MAAMM,IAAI,CAAC;MAC1D;IAGN;IAEA,oBACIiB,OAAA;MAAAC,QAAA,EAAG;IAA0D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAIzE;EACA,oBACIL,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAL,QAAA,gBAClBD,OAAA;MAAQO,OAAO,EAAEpC,WAAY;MAAA8B,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACrDL,OAAA;MAAAC,QAAA,EAAG;IAA0D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACjEL,OAAA;MAAAC,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxB;AAGd;AAACG,EAAA,GA3DevC,cAAc;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}