{"ast":null,"code":"var _jsxFileName = \"/Users/wangjiamin/Documents/GitHub/makeup-starters/src/SkinTemptColor.js\";\n//import '../SkinTemptColor.html'\nimport './index.css';\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SkinTemptColor(props) {\n  const stopButton = document.getElementById(\"stopButton\");\n  let preview = document.getElementById(\"preview\");\n  let recordingTimeMS = 3000;\n  let recording = document.getElementById(\"recording\");\n  function wait(delayInMS) {\n    return new Promise(resolve => setTimeout(resolve, delayInMS));\n  }\n  function startRecording(stream, lengthInMS) {\n    let recorder = new MediaRecorder(stream);\n    let data = [];\n    recorder.ondataavailable = event => data.push(event.data);\n    recorder.start();\n    //console.log(`${recorder.state} for ${lengthInMS / 1000} seconds…`);\n    stopButton.addEventListener(\"click\", () => {\n      recorder.stop();\n    });\n    let stopped = new Promise((resolve, reject) => {\n      recorder.onstop = resolve;\n      recorder.onerror = event => reject(event.name);\n    });\n    let recorded = wait(lengthInMS).then(() => {\n      if (recorder.state === \"recording\") {\n        recorder.stop();\n      }\n    });\n    return Promise.all([stopped, recorded]).then(() => data);\n  }\n  function stop(stream) {\n    stream.getTracks().forEach(track => track.stop());\n  }\n  function handleClick(event) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        preview.srcObject = stream;\n        //preview.requestPictureInPicture();\n\n        //a.srcObject = stream;\n\n        preview.captureStream = preview.captureStream || preview.mozCaptureStream;\n        return new Promise(resolve => preview.onplaying = resolve);\n      }).then(() => startRecording(preview.captureStream(), recordingTimeMS)).then(recordedChunks => {\n        let recordedBlob = new Blob(recordedChunks, {\n          type: \"video/webm\"\n        });\n        recording.src = URL.createObjectURL(recordedBlob);\n        console.log(`Successfully recorded ${recordedBlob.size} bytes of ${recordedBlob.type} media.`);\n      }).catch(error => {\n        if (error.name === \"NotFoundError\") {\n          console.log(\"Camera or microphone not found. Can't record.\");\n        } else {\n          console.log('error');\n        }\n      });\n    }\n  }\n  function handleStop(event) {\n    //let stopButton = document.getElementById(\"stopButton\");\n    //preview.srcObject\n    if (preview) {\n      stop(preview.srcObject);\n    } else {\n      preview = 5;\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({\n          video: false\n        }).then(stream => {\n          preview.srcObject = stream;\n          preview.captureStream = preview.captureStream || preview.mozCaptureStream;\n          return new Promise(resolve => preview.onplaying = resolve);\n        }).then(() => stop(preview.captureStream));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this function will help you to know your skin Tempterature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"camera required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \" start testing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"preview\",\n        width: \"160\",\n        height: \"120\",\n        autopplay: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"recording\",\n        width: \"160\",\n        height: \"120\",\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        id: \"stopButton\",\n        className: \"button\",\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_c = SkinTemptColor;\nvar _c;\n$RefreshReg$(_c, \"SkinTemptColor\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","SkinTemptColor","props","stopButton","document","getElementById","preview","recordingTimeMS","recording","wait","delayInMS","Promise","resolve","setTimeout","startRecording","stream","lengthInMS","recorder","MediaRecorder","data","ondataavailable","event","push","start","addEventListener","stop","stopped","reject","onstop","onerror","name","recorded","then","state","all","getTracks","forEach","track","handleClick","navigator","mediaDevices","getUserMedia","video","srcObject","captureStream","mozCaptureStream","onplaying","recordedChunks","recordedBlob","Blob","type","src","URL","createObjectURL","console","log","size","catch","error","handleStop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","width","height","autopplay","controls","_c","$RefreshReg$"],"sources":["/Users/wangjiamin/Documents/GitHub/makeup-starters/src/SkinTemptColor.js"],"sourcesContent":["//import '../SkinTemptColor.html'\nimport './index.css';\nimport React, { useRef, useEffect} from 'react';\n\n \n\nexport function SkinTemptColor(props){\n\n    const stopButton= document.getElementById(\"stopButton\");\n    let preview = document.getElementById(\"preview\");\n    let recordingTimeMS = 3000;\n    let recording = document.getElementById(\"recording\");\n\n    function wait(delayInMS) {\n        return new Promise((resolve) => setTimeout(resolve, delayInMS));\n      }\n\n    function startRecording(stream, lengthInMS) {\n        let recorder = new MediaRecorder(stream);\n        let data = [];\n      \n        recorder.ondataavailable = (event) => data.push(event.data);\n        recorder.start();\n        //console.log(`${recorder.state} for ${lengthInMS / 1000} seconds…`);\n        stopButton.addEventListener(\n            \"click\",\n            () =>{\n                recorder.stop();\n            })\n        let stopped = new Promise((resolve, reject) => {\n          recorder.onstop = resolve;\n          recorder.onerror = (event) => reject(event.name);\n        });\n      \n        let recorded = wait(lengthInMS).then(() => {\n          if (recorder.state === \"recording\") {\n            recorder.stop();\n          }\n\n         \n        \n\n        });\n      \n        return Promise.all([stopped, recorded]).then(() => data);\n      }\n\n    \n    function stop(stream) {\n        stream.getTracks().forEach((track) => track.stop());\n    }\n\n\n    function handleClick(event){\n        \n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({\n                video: true\n            })\n            \n            .then((stream) => {\n                preview.srcObject = stream;\n                //preview.requestPictureInPicture();\n                \n\t\t\t//a.srcObject = stream;\n\n                preview.captureStream =\n                preview.captureStream || preview.mozCaptureStream;\n                return new Promise((resolve) => (preview.onplaying = resolve));\n            })\n            .then(() => startRecording(preview.captureStream(), recordingTimeMS))\n            .then((recordedChunks) => {\n                let recordedBlob = new Blob(recordedChunks, { type: \"video/webm\" });\n                recording.src = URL.createObjectURL(recordedBlob);\n\n            console.log(\n                `Successfully recorded ${recordedBlob.size} bytes of ${recordedBlob.type} media.`\n             );\n            })\n            .catch((error) => {\n                if (error.name === \"NotFoundError\") {\n                    console.log(\"Camera or microphone not found. Can't record.\");\n                } else {\n                    console.log('error');\n            }\n            });\n           \n           \n           \n        }\n        \n    }\n\n    \n    function handleStop(event){\n        //let stopButton = document.getElementById(\"stopButton\");\n        //preview.srcObject\n        if (preview) { \n            \n            stop(preview.srcObject);\n\n        } \n            else {\n                preview = 5;\n                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                    navigator.mediaDevices.getUserMedia({\n                        video: false\n                    })\n                    \n                    .then((stream) => {\n                        preview.srcObject = stream;\n                        preview.captureStream =\n                        preview.captureStream || preview.mozCaptureStream;\n                        return new Promise((resolve) => (preview.onplaying = resolve));\n                    })\n                   .then(() => stop(preview.captureStream))\n                }\n            }\n    }\n    return (\n        <div className=\"main-body\">\n                \n                <p>this function will help you to know your skin Tempterature</p>\n                <p>camera required</p>\n                <div className=\"start\">\n                    <button onClick={handleClick}> start testing</button>\n                    <video id=\"preview\" width=\"160\" height=\"120\" autopplay=\"true\"></video>\n                </div>\n                    \n                <div>\n                {/* <video \n                ref={videoRef}\n                autoPlay\n                /> */}\n                    {/* <h2>Recording</h2> */}\n                    <video id=\"recording\" width=\"160\" height=\"120\" controls></video>\n                </div>\n                <div className=\"stop\">\n                    <button onClick={handleStop} id=\"stopButton\" className=\"button\">Stop Recording</button>\n                 </div>\n        </div>\n        \n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}